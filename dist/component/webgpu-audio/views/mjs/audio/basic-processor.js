import FreeQueue from"./lib/free-queue.js";import{FRAME_SIZE,RENDER_QUANTUM}from"./constants.js";const ExpectedPrimingCount=FRAME_SIZE/RENDER_QUANTUM;class BasicProcessor extends AudioWorkletProcessor{constructor(e){super(),this.inputQueue=e.processorOptions.inputQueue,this.outputQueue=e.processorOptions.outputQueue,this.atomicState=e.processorOptions.atomicState,Object.setPrototypeOf(this.inputQueue,FreeQueue.prototype),Object.setPrototypeOf(this.outputQueue,FreeQueue.prototype),this.primingCounter=0}process(e,t){const o=e[0],s=t[0];return this.primingCounter>ExpectedPrimingCount?this.outputQueue.pull(s,RENDER_QUANTUM)||console.log("[basic-processor.js] Not enough data in outputQueue"):this.primingCounter++,this.inputQueue.push(o,RENDER_QUANTUM)||console.log("[basic-processor.js] Not enough space in inputQueue"),this.inputQueue.hasEnoughFramesFor(FRAME_SIZE)&&(Atomics.store(this.atomicState,0,1),Atomics.notify(this.atomicState,0)),!0}}registerProcessor("basic-processor",BasicProcessor);
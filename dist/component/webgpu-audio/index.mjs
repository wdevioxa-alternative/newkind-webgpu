import{onload as t,init as e}from"../../this/index.mjs";import{actions as s}from"./actions/index.mjs";import{controller as i}from"./controller/index.mjs";const r="webgpu-audio",o={},n=class extends HTMLElement{static get observedAttributes(){return["disabled","open"]}_doRender(t,e,s){"isVerification"===t&&e!==s&&(this.querySelector('fer-hash[data-hash="verification"]').open=e),this._state.tree&&console.log("     🔵 RENDER")}cleanState(t,e=[]){if("all"===t)for(let t in this._state)e.some((e=>e===t))||(this._state[t]=structuredClone(o[t]));else this._state.hasOwnProperty(t)?this._state[t]=structuredClone(o[t]):(alert(`Свойтсва ${t} нет в стейте`),console.assert(!1,`надо определить свойство ${t} в стейте`,{state:this._state}))}getState(t){return structuredClone(this._state[`${t}`])}setState(t,e){if(this._state.hasOwnProperty(t)){const s=this._state[t];if("undefined"===e)return this._state[t]=void 0,void this._doRender(t,e,s);if(this._state[t]!==e||!1===this._state[t])return this._state[`${t}`]=e,this._doRender(t,e,s),e}else alert(`надо определить свойство ${t} в стейте`),console.assert(!1,`надо определить свойство ${t} в стейте`,{state:this._state})}set open(t){t?this.setAttribute("open",""):this.removeAttribute("open")}get open(){return this.hasAttribute("open")}set disabled(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get disabled(){return this.hasAttribute("disabled")}constructor(){super(),this.dataset.servicesPath?(this.controller={},this._isOnload=!1,this._state={},this._doRender=this._doRender.bind(this),e(this).then((t=>t._isOnload=!0)).catch((t=>console.warn("error",t)))):console.error("Надо устновить атрибут: data-services-path что бы можно было отличить компоненты, относящиеся к разным сервисам и назначить обработчики определенного сервиса",this)}connectedCallback(){t(this).then((async t=>{t.controller=await i(t,await s(t)),await t.controller.addEventListener.init()})).catch((t=>console.error("error",t)))}disconnectedCallback(){this.controller.addEventListener.terminate(),console.log(`     🔴 COMPONENTS ${this.tagName} disconnected`)}};void 0===customElements.get(r)&&customElements.define(r,n);export default{component:r,description:`Компонент ${r}`};
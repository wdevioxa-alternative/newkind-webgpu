import{onload as t,init as e}from"../../this/index.mjs";import{actions as s}from"./actions/index.mjs";import{controller as o}from"./controller/index.mjs";const n="checklist-checkbox",i=class extends HTMLElement{static get observedAttributes(){return["checked"]}_doRender(){this._state.tree&&console.log("     🔵 RENDER")}getState(t){return this._state[t]}setState(t,e){this._state.hasOwnProperty(t)?this._state[t]!==e&&(this._state[t]=e,this._doRender()):(alert(`надо определить свойство ${t} в стейте`),console.assert(!1,`надо определить свойство ${t} в стейте`,{state:this._state}))}load=()=>document.dispatchEvent(new CustomEvent("component-onload",{bubbles:!0,composed:!0,detail:{dataset:{id:this.dataset.id}}}));set checked(t){console.log("-------------------- CHECKED -------------------------",t)}constructor(){super(),this.dataset.servicesPath&&this.dataset.id?(this.controller={},this._isOnload=!1,this._state={},this._doRender=this._doRender.bind(this),e(this).then((t=>t._isOnload=!0)).catch((t=>console.warn("error",t)))):console.error("Надо устновить атрибут: data-services-path и data-id что бы можно было отличить компоненты, относящиеся к разным сервисам и назначить обработчики определенного сервиса",this)}connectedCallback(){t(this).then((async t=>{t.controller=await o(t,await s(t)),await t.controller.addEventListener.init(),this.shadowRoot.querySelectorAll("input"),this.load()})).catch((t=>console.error("error",t)))}disconnectedCallback(){console.log(`     🔴 COMPONENTS ${this.tagName} disconnected`,this.controller.addEventListener),this?.controller?.addEventListener?.terminate()}};void 0===customElements.get(n)&&customElements.define(n,i);export default{component:n,description:`Компонент ${n}`};
var common=require("./common"),assert=require("assert"),EventEmitter=require("../"),listener1=function(){},listener2=function(){};(ee=new EventEmitter).on("hello",listener1),ee.on("removeListener",common.mustCall((function(e,s){assert.strictEqual(e,"hello"),assert.strictEqual(s,listener1)}))),ee.removeListener("hello",listener1);var listeners=ee.listeners("hello");assert.ok(Array.isArray(listeners)),assert.strictEqual(listeners.length,0),(ee=new EventEmitter).on("hello",listener1),ee.on("removeListener",common.mustNotCall()),ee.removeListener("hello",listener2),listeners=ee.listeners("hello"),assert.ok(Array.isArray(listeners)),assert.strictEqual(listeners.length,1),assert.strictEqual(listeners[0],listener1),(ee=new EventEmitter).on("hello",listener1),ee.on("hello",listener2),ee.once("removeListener",common.mustCall((function(e,s){assert.strictEqual(e,"hello"),assert.strictEqual(s,listener1),listeners=ee.listeners("hello"),assert.ok(Array.isArray(listeners)),assert.strictEqual(listeners.length,1),assert.strictEqual(listeners[0],listener2)}))),ee.removeListener("hello",listener1),listeners=ee.listeners("hello"),assert.ok(Array.isArray(listeners)),assert.strictEqual(listeners.length,1),assert.strictEqual(listeners[0],listener2),ee.once("removeListener",common.mustCall((function(e,s){assert.strictEqual(e,"hello"),assert.strictEqual(s,listener2),listeners=ee.listeners("hello"),assert.ok(Array.isArray(listeners)),assert.strictEqual(listeners.length,0)}))),ee.removeListener("hello",listener2),listeners=ee.listeners("hello"),assert.ok(Array.isArray(listeners)),assert.strictEqual(listeners.length,0);{function remove1(){assert.fail("remove1 should not have been called")}function remove2(){assert.fail("remove2 should not have been called")}(ee=new EventEmitter).on("removeListener",common.mustCall((function(e,s){s===remove1&&(this.removeListener("quux",remove2),this.emit("quux"))}),2)),ee.on("quux",remove1),ee.on("quux",remove2),ee.removeListener("quux",remove1)}(ee=new EventEmitter).on("hello",listener1),ee.on("hello",listener2),ee.once("removeListener",common.mustCall((function(e,s){assert.strictEqual(e,"hello"),assert.strictEqual(s,listener1),listeners=ee.listeners("hello"),assert.ok(Array.isArray(listeners)),assert.strictEqual(listeners.length,1),assert.strictEqual(listeners[0],listener2),ee.once("removeListener",common.mustCall((function(e,s){assert.strictEqual(e,"hello"),assert.strictEqual(s,listener2),listeners=ee.listeners("hello"),assert.ok(Array.isArray(listeners)),assert.strictEqual(listeners.length,0)}))),ee.removeListener("hello",listener2),listeners=ee.listeners("hello"),assert.ok(Array.isArray(listeners)),assert.strictEqual(listeners.length,0)}))),ee.removeListener("hello",listener1),listeners=ee.listeners("hello"),assert.ok(Array.isArray(listeners)),assert.strictEqual(listeners.length,0);var ee=new EventEmitter,listener3=common.mustCall((function(){ee.removeListener("hello",listener4)}),2),listener4=common.mustCall();ee.on("hello",listener3),ee.on("hello",listener4),ee.emit("hello"),ee.emit("hello"),(ee=new EventEmitter).once("hello",listener1),ee.on("removeListener",common.mustCall((function(e,s){assert.strictEqual(e,"hello"),assert.strictEqual(s,listener1)}))),ee.emit("hello"),ee=new EventEmitter,assert.strictEqual(ee,ee.removeListener("foo",(function(){}))),assert.throws((function(){(new EventEmitter).removeListener("foo",null)}),/^TypeError: The "listener" argument must be of type Function\. Received type object$/);var listener=function(){};(ee=new EventEmitter)._events=void 0;var e=ee.removeListener("foo",listener);assert.strictEqual(e,ee),(ee=new EventEmitter).on("foo",listener1),ee.on("foo",listener2),listeners=ee.listeners("foo"),assert.ok(Array.isArray(listeners)),assert.strictEqual(listeners.length,2),assert.strictEqual(listeners[0],listener1),assert.strictEqual(listeners[1],listener2),ee.removeListener("foo",listener1),assert.strictEqual(ee._events.foo,listener2),ee.on("foo",listener1),listeners=ee.listeners("foo"),assert.ok(Array.isArray(listeners)),assert.strictEqual(listeners.length,2),assert.strictEqual(listeners[0],listener2),assert.strictEqual(listeners[1],listener1),ee.removeListener("foo",listener1),assert.strictEqual(ee._events.foo,listener2);